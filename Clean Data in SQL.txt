/* Data Cleaning in SQL 

*/

-- 1. Create database
-- 2. Import Table from Excel
-- 3. Change table name directly in the Database

-- Standardize Date Format

-
select * from NashvilleHousing

SELECT saledate, CONVERT (Date,SaleDate)
FROM sql.dbo.NashvilleHousing

SELECT saledateconverted, CONVERT (Date,SaleDate)
FROM sql.dbo.NashvilleHousing

UPDATE NashvilleHousing
SET SaleDate = CONVERT (Date, SaleDate)

ALTER TABLE NashvilleHousing
ADD SaleDateConverted Date;

UPDATE NashvilleHousing
SET SaleDateConverted = CONVERT (Date, SaleDate)

-- Populate Property Address  Data

SELECT * --PropertyAddress
FROM sql.dbo.NashvilleHousing
--WHERE PropertyAddress IS NULL
ORDER BY ParcelID

SELECT a.ParcelID, a.PropertyAddress, b.ParcelID, b.PropertyAddress, ISNULL(a.PropertyAddress, b.PropertyAddress)
FROM sql.dbo.NashvilleHousing a
JOIN sql.dbo.NashvilleHousing b
	ON a.ParcelID = b.ParcelID
	AND a.[UniqueID] <> b.[UniqueID]
WHERE a.PropertyAddress is null
 
 -- Populate the Adress from a to b using Joins where the PropertyAdress is Null, and the ParcelID is the same, but the UniqueID are differents
UPDATE a
SET PropertyAddress = ISNULL(a.PropertyAddress, b.PropertyAddress)
FROM sql.dbo.NashvilleHousing a
JOIN sql.dbo.NashvilleHousing b
	ON a.ParcelID = b.ParcelID
	AND a.[UniqueID] <> b.[UniqueID]
WHERE a.PropertyAddress is null

SELECT * FROM sql.dbo.NashvilleHousing
WHERE PropertyAddress is null

-- Breaking out Address into Individual Columns (Address, City, State) USING STRINGS

SELECT PropertyAddress,
SUBSTRING(PropertyAddress, 1, CHARINDEX	(',',PropertyAddress)-1) AS Address
,SUBSTRING(PropertyAddress, CHARINDEX	(',',PropertyAddress)+1, LEN(PropertyAddress)) AS City
FROM sql.dbo.NashvilleHousing

ALTER TABLE NashvilleHousing
ADD PropertySplitAddress Nvarchar(255)

UPDATE NashvilleHousing
SET PropertySplitAddress = SUBSTRING(PropertyAddress, 1, CHARINDEX	(',',PropertyAddress)-1)

ALTER TABLE NashvilleHousing
ADD PropertySplitCity Nvarchar(255)

UPDATE NashvilleHousing
SET PropertySplitCity = SUBSTRING(PropertyAddress, CHARINDEX	(',',PropertyAddress)+1, LEN(PropertyAddress))

SELECT * FROM sql.dbo.NashvilleHousing


-- USE PARSENAME INSTEAD OF SUBSTRING

SELECT ownerAddress
FROM sql.dbo.NashvilleHousing

SELECT 
PARSENAME(REPLACE(OwnerAddress,',','.'),3)
, PARSENAME(REPLACE(OwnerAddress,',','.'),2)
, PARSENAME(REPLACE(OwnerAddress,',','.'),1)
FROM sql.dbo.NashvilleHousing

ALTER TABLE NashvilleHousing
ADD OwnerSplitAddress Nvarchar(255)

UPDATE NashvilleHousing
SET OwnerSplitAddress = PARSENAME(REPLACE(OwnerAddress,',','.'),3)

ALTER TABLE NashvilleHousing
ADD OwnerSplitCity Nvarchar(255)

UPDATE NashvilleHousing
SET OwnerSplitCity = PARSENAME(REPLACE(OwnerAddress,',','.'),2)

ALTER TABLE NashvilleHousing
ADD OwnerSplitState Nvarchar(255)

UPDATE NashvilleHousing
SET OwnerSplitState = PARSENAME(REPLACE(OwnerAddress,',','.'),1)

SELECT * FROM sql.dbo.NashvilleHousing

-- Change Y and N to Yes and No in "Sold as Vacant" Field

SELECT DISTINCT(SoldAsVacant), COUNT(SoldAsVacant)
FROM sql.dbo.NashvilleHousing
GROUP BY SoldAsVacant
ORDER BY 2

-- USE CASE STATEMENT

SELECT SoldAsVacant
, CASE WHEN SoldAsVacant = 'Y' THEN 'Yes'
	   WHEN SoldAsVacant = 'N' THEN 'No'
	   ELSE SoldAsVacant
	   END
FROM sql.dbo.NashvilleHousing

UPDATE NashvilleHousing
SET SoldAsVacant = CASE WHEN SoldAsVacant = 'Y' THEN 'Yes'
	   WHEN SoldAsVacant = 'N' THEN 'No'
	   ELSE SoldAsVacant
	   END
FROM sql.dbo.NashvilleHousing


-- Remove Duplicates WITH PARTITION BY 

WITH RowNumCTE AS(
SELECT *,
	ROW_NUMBER() OVER(
	PARTITION BY ParcelID,
				 PropertyAddress,
				 SalePrice,
				 SaleDate,
				 LegalReference
				 ORDER BY 
					UniqueID
					) row_num
FROM sql.dbo.NashvilleHousing
--ORDER BY ParcelID
)
SELECT * 
FROM RowNumCTE
WHERE row_num > 1
ORDER BY PropertyAddress

SELECT * FROM sql.dbo.NashvilleHousing

-- SELECT UNUSED COLUMNS

SELECT * 
FROM sql.dbo.NashvilleHousing

ALTER TABLE sql.dbo.nashvillehousing
DROP COLUMN OwnerAddress, TaxDistrict, PropertyAddress

ALTER TABLE sql.dbo.nashvillehousing
DROP COLUMN SaleDate